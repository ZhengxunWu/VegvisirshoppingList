// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package com.isaacsheff.charlotte.proto;

public final class CharlotteCommonProto {
  private CharlotteCommonProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_Hash_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_Hash_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_PublicKey_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_PublicKey_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_PublicKey_EllipticCurveP256_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_PublicKey_EllipticCurveP256_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_CryptoId_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_CryptoId_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_Signature_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_Signature_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_Signature_SignatureAlgorithmSHA256WithECDSA_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_Signature_SignatureAlgorithmSHA256WithECDSA_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_Reference_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_Reference_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_ChainSlot_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_ChainSlot_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_SignedChainSlot_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_SignedChainSlot_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_TimestampedReferences_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_TimestampedReferences_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_SignedTimestampedReferences_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_SignedTimestampedReferences_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_GitSimBranch_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_GitSimBranch_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_SignedGitSimBranch_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_SignedGitSimBranch_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_IntegrityAttestation_HetconsAttestation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_IntegrityAttestation_HetconsAttestation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_AvailabilityAttestation_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_AvailabilityAttestation_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_AvailabilityAttestation_StoreForever_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_AvailabilityAttestation_StoreForever_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_charlotte_AvailabilityAttestation_SignedStoreForever_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_charlotte_AvailabilityAttestation_SignedStoreForever_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014common.proto\022\tcharlotte\032\037google/protob" +
      "uf/timestamp.proto\"-\n\004Hash\022\016\n\004sha3\030\001 \001(\014" +
      "H\000B\025\n\023hashalgorithm_oneof\"\217\001\n\tPublicKey\022" +
      "C\n\021ellipticCurveP256\030\001 \001(\0132&.charlotte.P" +
      "ublicKey.EllipticCurveP256H\000\032\'\n\021Elliptic" +
      "CurveP256\022\022\n\nbyteString\030\001 \001(\014B\024\n\022keyalgo" +
      "rithm_oneof\"f\n\010CryptoId\022)\n\tpublicKey\030\001 \001" +
      "(\0132\024.charlotte.PublicKeyH\000\022\037\n\004hash\030\002 \001(\013" +
      "2\017.charlotte.HashH\000B\016\n\014idtype_oneof\"\332\001\n\t" +
      "Signature\022%\n\010cryptoId\030\001 \001(\0132\023.charlotte." +
      "CryptoId\022Q\n\017sha256WithEcdsa\030\002 \001(\01326.char" +
      "lotte.Signature.SignatureAlgorithmSHA256" +
      "WithECDSAH\000\0327\n!SignatureAlgorithmSHA256W" +
      "ithECDSA\022\022\n\nbyteString\030\001 \001(\014B\032\n\030signatur" +
      "ealgorithm_oneof\"\222\001\n\tReference\022\035\n\004hash\030\001" +
      " \001(\0132\017.charlotte.Hash\0221\n\030availabilityAtt" +
      "estations\030\002 \003(\0132\017.charlotte.Hash\0223\n\025inte" +
      "grityAttestations\030\003 \003(\0132\024.charlotte.Refe" +
      "rence\"\377\007\n\024IntegrityAttestation\022P\n\022hetcon" +
      "sAttestation\030\004 \001(\01322.charlotte.Integrity" +
      "Attestation.HetconsAttestationH\000\032\210\001\n\tCha" +
      "inSlot\022#\n\005block\030\001 \001(\0132\024.charlotte.Refere" +
      "nce\022\"\n\004root\030\002 \001(\0132\024.charlotte.Reference\022" +
      "\014\n\004slot\030\003 \001(\004\022$\n\006parent\030\004 \001(\0132\024.charlott" +
      "e.Reference\032x\n\017SignedChainSlot\022<\n\tchainS" +
      "lot\030\001 \001(\0132).charlotte.IntegrityAttestati" +
      "on.ChainSlot\022\'\n\tsignature\030\002 \001(\0132\024.charlo" +
      "tte.Signature\032k\n\025TimestampedReferences\022-" +
      "\n\ttimestamp\030\001 \001(\0132\032.google.protobuf.Time" +
      "stamp\022#\n\005block\030\002 \003(\0132\024.charlotte.Referen" +
      "ce\032\234\001\n\033SignedTimestampedReferences\022T\n\025ti" +
      "mestampedReferences\030\001 \001(\01325.charlotte.In" +
      "tegrityAttestation.TimestampedReferences" +
      "\022\'\n\tsignature\030\002 \001(\0132\024.charlotte.Signatur" +
      "e\032w\n\014GitSimBranch\022-\n\ttimestamp\030\001 \001(\0132\032.g" +
      "oogle.protobuf.Timestamp\022\022\n\nbranchName\030\002" +
      " \001(\t\022$\n\006commit\030\003 \001(\0132\024.charlotte.Referen" +
      "ce\032\201\001\n\022SignedGitSimBranch\022B\n\014gitSimBranc" +
      "h\030\001 \001(\0132,.charlotte.IntegrityAttestation" +
      ".GitSimBranch\022\'\n\tsignature\030\002 \001(\0132\024.charl" +
      "otte.Signature\032e\n\022HetconsAttestation\022&\n\t" +
      "observers\030\001 \003(\0132\023.charlotte.CryptoId\022\'\n\t" +
      "message2b\030\002 \003(\0132\024.charlotte.ReferenceB \n" +
      "\036integrityattestationtype_oneof\"\317\002\n\027Avai" +
      "labilityAttestation\022S\n\022signedStoreForeve" +
      "r\030\001 \001(\01325.charlotte.AvailabilityAttestat" +
      "ion.SignedStoreForeverH\000\0323\n\014StoreForever" +
      "\022#\n\005block\030\001 \003(\0132\024.charlotte.Reference\032\204\001" +
      "\n\022SignedStoreForever\022E\n\014storeForever\030\001 \001" +
      "(\0132/.charlotte.AvailabilityAttestation.S" +
      "toreForever\022\'\n\tsignature\030\002 \001(\0132\024.charlot" +
      "te.SignatureB#\n!availabilityattestationt" +
      "ype_oneofBK\n\036com.isaacsheff.charlotte.pr" +
      "otoB\024CharlotteCommonProtoP\001\242\002\020CHARLOTTE_" +
      "COMMONb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        }, assigner);
    internal_static_charlotte_Hash_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_charlotte_Hash_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_Hash_descriptor,
        new java.lang.String[] { "Sha3", "HashalgorithmOneof", });
    internal_static_charlotte_PublicKey_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_charlotte_PublicKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_PublicKey_descriptor,
        new java.lang.String[] { "EllipticCurveP256", "KeyalgorithmOneof", });
    internal_static_charlotte_PublicKey_EllipticCurveP256_descriptor =
      internal_static_charlotte_PublicKey_descriptor.getNestedTypes().get(0);
    internal_static_charlotte_PublicKey_EllipticCurveP256_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_PublicKey_EllipticCurveP256_descriptor,
        new java.lang.String[] { "ByteString", });
    internal_static_charlotte_CryptoId_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_charlotte_CryptoId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_CryptoId_descriptor,
        new java.lang.String[] { "PublicKey", "Hash", "IdtypeOneof", });
    internal_static_charlotte_Signature_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_charlotte_Signature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_Signature_descriptor,
        new java.lang.String[] { "CryptoId", "Sha256WithEcdsa", "SignaturealgorithmOneof", });
    internal_static_charlotte_Signature_SignatureAlgorithmSHA256WithECDSA_descriptor =
      internal_static_charlotte_Signature_descriptor.getNestedTypes().get(0);
    internal_static_charlotte_Signature_SignatureAlgorithmSHA256WithECDSA_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_Signature_SignatureAlgorithmSHA256WithECDSA_descriptor,
        new java.lang.String[] { "ByteString", });
    internal_static_charlotte_Reference_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_charlotte_Reference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_Reference_descriptor,
        new java.lang.String[] { "Hash", "AvailabilityAttestations", "IntegrityAttestations", });
    internal_static_charlotte_IntegrityAttestation_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_charlotte_IntegrityAttestation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_descriptor,
        new java.lang.String[] { "HetconsAttestation", "IntegrityattestationtypeOneof", });
    internal_static_charlotte_IntegrityAttestation_ChainSlot_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(0);
    internal_static_charlotte_IntegrityAttestation_ChainSlot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_ChainSlot_descriptor,
        new java.lang.String[] { "Block", "Root", "Slot", "Parent", });
    internal_static_charlotte_IntegrityAttestation_SignedChainSlot_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(1);
    internal_static_charlotte_IntegrityAttestation_SignedChainSlot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_SignedChainSlot_descriptor,
        new java.lang.String[] { "ChainSlot", "Signature", });
    internal_static_charlotte_IntegrityAttestation_TimestampedReferences_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(2);
    internal_static_charlotte_IntegrityAttestation_TimestampedReferences_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_TimestampedReferences_descriptor,
        new java.lang.String[] { "Timestamp", "Block", });
    internal_static_charlotte_IntegrityAttestation_SignedTimestampedReferences_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(3);
    internal_static_charlotte_IntegrityAttestation_SignedTimestampedReferences_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_SignedTimestampedReferences_descriptor,
        new java.lang.String[] { "TimestampedReferences", "Signature", });
    internal_static_charlotte_IntegrityAttestation_GitSimBranch_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(4);
    internal_static_charlotte_IntegrityAttestation_GitSimBranch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_GitSimBranch_descriptor,
        new java.lang.String[] { "Timestamp", "BranchName", "Commit", });
    internal_static_charlotte_IntegrityAttestation_SignedGitSimBranch_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(5);
    internal_static_charlotte_IntegrityAttestation_SignedGitSimBranch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_SignedGitSimBranch_descriptor,
        new java.lang.String[] { "GitSimBranch", "Signature", });
    internal_static_charlotte_IntegrityAttestation_HetconsAttestation_descriptor =
      internal_static_charlotte_IntegrityAttestation_descriptor.getNestedTypes().get(6);
    internal_static_charlotte_IntegrityAttestation_HetconsAttestation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_IntegrityAttestation_HetconsAttestation_descriptor,
        new java.lang.String[] { "Observers", "Message2B", });
    internal_static_charlotte_AvailabilityAttestation_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_charlotte_AvailabilityAttestation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_AvailabilityAttestation_descriptor,
        new java.lang.String[] { "SignedStoreForever", "AvailabilityattestationtypeOneof", });
    internal_static_charlotte_AvailabilityAttestation_StoreForever_descriptor =
      internal_static_charlotte_AvailabilityAttestation_descriptor.getNestedTypes().get(0);
    internal_static_charlotte_AvailabilityAttestation_StoreForever_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_AvailabilityAttestation_StoreForever_descriptor,
        new java.lang.String[] { "Block", });
    internal_static_charlotte_AvailabilityAttestation_SignedStoreForever_descriptor =
      internal_static_charlotte_AvailabilityAttestation_descriptor.getNestedTypes().get(1);
    internal_static_charlotte_AvailabilityAttestation_SignedStoreForever_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_charlotte_AvailabilityAttestation_SignedStoreForever_descriptor,
        new java.lang.String[] { "StoreForever", "Signature", });
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
