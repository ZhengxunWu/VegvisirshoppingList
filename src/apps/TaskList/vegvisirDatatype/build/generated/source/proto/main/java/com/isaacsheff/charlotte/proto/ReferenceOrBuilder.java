// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

package com.isaacsheff.charlotte.proto;

public interface ReferenceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:charlotte.Reference)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the block we're referencing
   * </pre>
   *
   * <code>.charlotte.Hash hash = 1;</code>
   */
  boolean hasHash();
  /**
   * <pre>
   * the block we're referencing
   * </pre>
   *
   * <code>.charlotte.Hash hash = 1;</code>
   */
  com.isaacsheff.charlotte.proto.Hash getHash();
  /**
   * <pre>
   * the block we're referencing
   * </pre>
   *
   * <code>.charlotte.Hash hash = 1;</code>
   */
  com.isaacsheff.charlotte.proto.HashOrBuilder getHashOrBuilder();

  /**
   * <pre>
   * ids of avail. attestations (where to find it)
   * </pre>
   *
   * <code>repeated .charlotte.Hash availabilityAttestations = 2;</code>
   */
  java.util.List<com.isaacsheff.charlotte.proto.Hash> 
      getAvailabilityAttestationsList();
  /**
   * <pre>
   * ids of avail. attestations (where to find it)
   * </pre>
   *
   * <code>repeated .charlotte.Hash availabilityAttestations = 2;</code>
   */
  com.isaacsheff.charlotte.proto.Hash getAvailabilityAttestations(int index);
  /**
   * <pre>
   * ids of avail. attestations (where to find it)
   * </pre>
   *
   * <code>repeated .charlotte.Hash availabilityAttestations = 2;</code>
   */
  int getAvailabilityAttestationsCount();
  /**
   * <pre>
   * ids of avail. attestations (where to find it)
   * </pre>
   *
   * <code>repeated .charlotte.Hash availabilityAttestations = 2;</code>
   */
  java.util.List<? extends com.isaacsheff.charlotte.proto.HashOrBuilder> 
      getAvailabilityAttestationsOrBuilderList();
  /**
   * <pre>
   * ids of avail. attestations (where to find it)
   * </pre>
   *
   * <code>repeated .charlotte.Hash availabilityAttestations = 2;</code>
   */
  com.isaacsheff.charlotte.proto.HashOrBuilder getAvailabilityAttestationsOrBuilder(
      int index);

  /**
   * <pre>
   * ids of relevant integrity attestations (and where to find those)
   * </pre>
   *
   * <code>repeated .charlotte.Reference integrityAttestations = 3;</code>
   */
  java.util.List<com.isaacsheff.charlotte.proto.Reference> 
      getIntegrityAttestationsList();
  /**
   * <pre>
   * ids of relevant integrity attestations (and where to find those)
   * </pre>
   *
   * <code>repeated .charlotte.Reference integrityAttestations = 3;</code>
   */
  com.isaacsheff.charlotte.proto.Reference getIntegrityAttestations(int index);
  /**
   * <pre>
   * ids of relevant integrity attestations (and where to find those)
   * </pre>
   *
   * <code>repeated .charlotte.Reference integrityAttestations = 3;</code>
   */
  int getIntegrityAttestationsCount();
  /**
   * <pre>
   * ids of relevant integrity attestations (and where to find those)
   * </pre>
   *
   * <code>repeated .charlotte.Reference integrityAttestations = 3;</code>
   */
  java.util.List<? extends com.isaacsheff.charlotte.proto.ReferenceOrBuilder> 
      getIntegrityAttestationsOrBuilderList();
  /**
   * <pre>
   * ids of relevant integrity attestations (and where to find those)
   * </pre>
   *
   * <code>repeated .charlotte.Reference integrityAttestations = 3;</code>
   */
  com.isaacsheff.charlotte.proto.ReferenceOrBuilder getIntegrityAttestationsOrBuilder(
      int index);
}
